syntax = v1.0;

using "Omnius.Core.Cryptography";
using "Omnius.Core.Network";

namespace "Omnius.Xeus.Service";

table NodeProfile {
    Id: bytes(capacity: 256) = 0,
    Addresses: vector<OmniAddress>(capacity: 32) = 1,
}

enum ErrorReportType : uint8 {
    SpaceNotFound = 0,
}

table ErrorReport {
    CreationTime: timestamp = 0,
    Type: ErrorReportType = 1,
}

enum TcpProxyType : uint8 {
    HttpProxy = 0,
    Socks5Proxy = 1,
}

table TcpProxyOptions {
    Type: TcpProxyType = 0,
    Address: OmniAddress = 1,
}

table TcpConnectOptions {
    Enabled: bool = 0,
    ProxyOptions: TcpProxyOptions? = 1,
}

table TcpAcceptOptions {
    Enabled: bool = 0,
    ListenAddresses: vector<OmniAddress>(capacity: 32) = 1,
    UseUpnp: bool = 2,
}

table TcpConnectorOptions {
    TcpConnectOptions: TcpConnectOptions = 0,
    TcpAcceptOptions: TcpAcceptOptions = 1,
}

table CheckConsistencyReport {
    BadBlockCount: uint32 = 0,
    CheckedBlockCount: uint32 = 1,
    TotalBlockCount: uint32 = 2,
}

table PublishMessageReport {
}

table WantMessageReport {
}

table PublishFileReport {
    RootHash: OmniHash = 0,
    FilePath: string = 1,
}

table WantFileReport {
    RootHash: OmniHash = 0,
    FilePath: string = 1,
}
