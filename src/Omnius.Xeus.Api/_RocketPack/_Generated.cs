// <auto-generated/>
#nullable enable

namespace Omnius.Xeus.Api
{
    public sealed partial class CkadMediator_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.CkadMediator_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>.Empty;

        static CkadMediator_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.CkadMediator_GetReport_Output(global::Omnius.Xeus.Engines.Models.CkadMediatorReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public CkadMediator_GetReport_Output(global::Omnius.Xeus.Engines.Models.CkadMediatorReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.CkadMediatorReport Report { get; }

        public static global::Omnius.Xeus.Api.CkadMediator_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.CkadMediator_GetReport_Output? left, global::Omnius.Xeus.Api.CkadMediator_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.CkadMediator_GetReport_Output? left, global::Omnius.Xeus.Api.CkadMediator_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.CkadMediator_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.CkadMediator_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.CkadMediator_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.CkadMediator_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.CkadMediatorReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.CkadMediatorReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.CkadMediator_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.CkadMediatorReport p_report = global::Omnius.Xeus.Engines.Models.CkadMediatorReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.CkadMediatorReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.CkadMediator_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class CkadMediator_GetMyNodeProfile_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>.Formatter;
        public static global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>.Empty;

        static CkadMediator_GetMyNodeProfile_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>.Empty = new global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output(global::Omnius.Xeus.Engines.Models.NodeProfile.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public CkadMediator_GetMyNodeProfile_Output(global::Omnius.Xeus.Engines.Models.NodeProfile nodeProfile)
        {
            if (nodeProfile is null) throw new global::System.ArgumentNullException("nodeProfile");

            this.NodeProfile = nodeProfile;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (nodeProfile != default) ___h.Add(nodeProfile.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.NodeProfile NodeProfile { get; }

        public static global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output? left, global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output? left, global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.NodeProfile != target.NodeProfile) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.NodeProfile != global::Omnius.Xeus.Engines.Models.NodeProfile.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.NodeProfile.Formatter.Serialize(ref w, value.NodeProfile, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.NodeProfile p_nodeProfile = global::Omnius.Xeus.Engines.Models.NodeProfile.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_nodeProfile = global::Omnius.Xeus.Engines.Models.NodeProfile.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output(p_nodeProfile);
            }
        }
    }
    public sealed partial class CkadMediator_AddCloudNodeProfiles_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>.Formatter;
        public static global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>.Empty;

        static CkadMediator_AddCloudNodeProfiles_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>.Empty = new global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input(global::System.Array.Empty<global::Omnius.Xeus.Engines.Models.NodeProfile>());
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxNodeProfilesCount = 32;

        public CkadMediator_AddCloudNodeProfiles_Input(global::Omnius.Xeus.Engines.Models.NodeProfile[] nodeProfiles)
        {
            if (nodeProfiles is null) throw new global::System.ArgumentNullException("nodeProfiles");
            if (nodeProfiles.Length > 32) throw new global::System.ArgumentOutOfRangeException("nodeProfiles");
            foreach (var n in nodeProfiles)
            {
                if (n is null) throw new global::System.ArgumentNullException("n");
            }

            this.NodeProfiles = new global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Xeus.Engines.Models.NodeProfile>(nodeProfiles);

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                foreach (var n in nodeProfiles)
                {
                    if (n != default) ___h.Add(n.GetHashCode());
                }
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Collections.ReadOnlyListSlim<global::Omnius.Xeus.Engines.Models.NodeProfile> NodeProfiles { get; }

        public static global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input? left, global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input? left, global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (!global::Omnius.Core.Helpers.CollectionHelper.Equals(this.NodeProfiles, target.NodeProfiles)) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.NodeProfiles.Count != 0)
                {
                    w.Write((uint)1);
                    w.Write((uint)value.NodeProfiles.Count);
                    foreach (var n in value.NodeProfiles)
                    {
                        global::Omnius.Xeus.Engines.Models.NodeProfile.Formatter.Serialize(ref w, n, rank + 1);
                    }
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.NodeProfile[] p_nodeProfiles = global::System.Array.Empty<global::Omnius.Xeus.Engines.Models.NodeProfile>();

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                var length = r.GetUInt32();
                                p_nodeProfiles = new global::Omnius.Xeus.Engines.Models.NodeProfile[length];
                                for (int i = 0; i < p_nodeProfiles.Length; i++)
                                {
                                    p_nodeProfiles[i] = global::Omnius.Xeus.Engines.Models.NodeProfile.Formatter.Deserialize(ref r, rank + 1);
                                }
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input(p_nodeProfiles);
            }
        }
    }
    public sealed partial class ContentExchanger_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>.Empty;

        static ContentExchanger_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentExchangerReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentExchanger_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentExchangerReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.ContentExchangerReport Report { get; }

        public static global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output? left, global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output? left, global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.ContentExchangerReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.ContentExchangerReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.ContentExchangerReport p_report = global::Omnius.Xeus.Engines.Models.ContentExchangerReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.ContentExchangerReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class DeclaredMessageExchanger_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>.Empty;

        static DeclaredMessageExchanger_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public DeclaredMessageExchanger_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport Report { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessageExchangerReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class ContentPublisher_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>.Empty;

        static ContentPublisher_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentPublisherReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentPublisher_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentPublisherReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.ContentPublisherReport Report { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output? left, global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output? left, global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.ContentPublisherReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.ContentPublisherReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.ContentPublisherReport p_report = global::Omnius.Xeus.Engines.Models.ContentPublisherReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.ContentPublisherReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class ContentPublisher_PublishContent_File_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>.Empty;

        static ContentPublisher_PublishContent_File_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input(string.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxFilePathLength = 2147483647;
        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentPublisher_PublishContent_File_Input(string filePath, string registrant)
        {
            if (filePath is null) throw new global::System.ArgumentNullException("filePath");
            if (filePath.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("filePath");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.FilePath = filePath;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (filePath != default) ___h.Add(filePath.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public string FilePath { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.FilePath != target.FilePath) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.FilePath != string.Empty)
                {
                    w.Write((uint)1);
                    w.Write(value.FilePath);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                string p_filePath = string.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_filePath = r.GetString(2147483647);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input(p_filePath, p_registrant);
            }
        }
    }
    public sealed partial class ContentPublisher_PublishContent_File_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>.Empty;

        static ContentPublisher_PublishContent_File_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output(global::Omnius.Core.Cryptography.OmniHash.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentPublisher_PublishContent_File_Output(global::Omnius.Core.Cryptography.OmniHash hash)
        {
            this.Hash = hash;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (hash != default) ___h.Add(hash.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash Hash { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Hash != target.Hash) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Hash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.Hash, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_hash = global::Omnius.Core.Cryptography.OmniHash.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_hash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output(p_hash);
            }
        }
    }
    public sealed partial class ContentPublisher_PublishContent_Memory_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>.Empty;

        static ContentPublisher_PublishContent_Memory_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input(global::System.ReadOnlyMemory<byte>.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxMemoryLength = 33554432;
        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentPublisher_PublishContent_Memory_Input(global::System.ReadOnlyMemory<byte> memory, string registrant)
        {
            if (memory.Length > 33554432) throw new global::System.ArgumentOutOfRangeException("memory");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.Memory = memory;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (!memory.IsEmpty) ___h.Add(global::Omnius.Core.Helpers.ObjectHelper.GetHashCode(memory.Span));
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::System.ReadOnlyMemory<byte> Memory { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (!global::Omnius.Core.BytesOperations.Equals(this.Memory.Span, target.Memory.Span)) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (!value.Memory.IsEmpty)
                {
                    w.Write((uint)1);
                    w.Write(value.Memory.Span);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::System.ReadOnlyMemory<byte> p_memory = global::System.ReadOnlyMemory<byte>.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_memory = r.GetMemory(33554432);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input(p_memory, p_registrant);
            }
        }
    }
    public sealed partial class ContentPublisher_PublishContent_Memory_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>.Empty;

        static ContentPublisher_PublishContent_Memory_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output(global::Omnius.Core.Cryptography.OmniHash.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentPublisher_PublishContent_Memory_Output(global::Omnius.Core.Cryptography.OmniHash hash)
        {
            this.Hash = hash;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (hash != default) ___h.Add(hash.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash Hash { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output? left, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Hash != target.Hash) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Hash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.Hash, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_hash = global::Omnius.Core.Cryptography.OmniHash.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_hash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output(p_hash);
            }
        }
    }
    public sealed partial class ContentPublisher_UnpublishContent_File_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>.Empty;

        static ContentPublisher_UnpublishContent_File_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input(string.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxFilePathLength = 2147483647;
        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentPublisher_UnpublishContent_File_Input(string filePath, string registrant)
        {
            if (filePath is null) throw new global::System.ArgumentNullException("filePath");
            if (filePath.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("filePath");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.FilePath = filePath;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (filePath != default) ___h.Add(filePath.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public string FilePath { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input? left, global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input? left, global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.FilePath != target.FilePath) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.FilePath != string.Empty)
                {
                    w.Write((uint)1);
                    w.Write(value.FilePath);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                string p_filePath = string.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_filePath = r.GetString(2147483647);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input(p_filePath, p_registrant);
            }
        }
    }
    public sealed partial class ContentPublisher_UnpublishContent_Memory_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>.Empty;

        static ContentPublisher_UnpublishContent_Memory_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>.Empty = new global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input(global::Omnius.Core.Cryptography.OmniHash.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentPublisher_UnpublishContent_Memory_Input(global::Omnius.Core.Cryptography.OmniHash rootHash, string registrant)
        {
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.RootHash = rootHash;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (rootHash != default) ___h.Add(rootHash.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash RootHash { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.RootHash != target.RootHash) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.RootHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.RootHash, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input(p_rootHash, p_registrant);
            }
        }
    }
    public sealed partial class ContentSubscriber_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>.Empty;

        static ContentSubscriber_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentSubscriberReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentSubscriber_GetReport_Output(global::Omnius.Xeus.Engines.Models.ContentSubscriberReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.ContentSubscriberReport Report { get; }

        public static global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output? left, global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output? left, global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.ContentSubscriberReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.ContentSubscriberReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.ContentSubscriberReport p_report = global::Omnius.Xeus.Engines.Models.ContentSubscriberReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.ContentSubscriberReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class ContentSubscriber_SubscribeContent_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>.Empty;

        static ContentSubscriber_SubscribeContent_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input(global::Omnius.Core.Cryptography.OmniHash.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentSubscriber_SubscribeContent_Input(global::Omnius.Core.Cryptography.OmniHash rootHash, string registrant)
        {
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.RootHash = rootHash;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (rootHash != default) ___h.Add(rootHash.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash RootHash { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.RootHash != target.RootHash) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.RootHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.RootHash, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input(p_rootHash, p_registrant);
            }
        }
    }
    public sealed partial class ContentSubscriber_UnsubscribeContent_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>.Empty;

        static ContentSubscriber_UnsubscribeContent_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input(global::Omnius.Core.Cryptography.OmniHash.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public ContentSubscriber_UnsubscribeContent_Input(global::Omnius.Core.Cryptography.OmniHash rootHash, string registrant)
        {
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.RootHash = rootHash;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (rootHash != default) ___h.Add(rootHash.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash RootHash { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.RootHash != target.RootHash) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.RootHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.RootHash, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input(p_rootHash, p_registrant);
            }
        }
    }
    public sealed partial class ContentSubscriber_ExportContent_File_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>.Empty;

        static ContentSubscriber_ExportContent_File_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input(global::Omnius.Core.Cryptography.OmniHash.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxFilePathLength = 2147483647;

        public ContentSubscriber_ExportContent_File_Input(global::Omnius.Core.Cryptography.OmniHash rootHash, string filePath)
        {
            if (filePath is null) throw new global::System.ArgumentNullException("filePath");
            if (filePath.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("filePath");

            this.RootHash = rootHash;
            this.FilePath = filePath;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (rootHash != default) ___h.Add(rootHash.GetHashCode());
                if (filePath != default) ___h.Add(filePath.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash RootHash { get; }
        public string FilePath { get; }

        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.RootHash != target.RootHash) return false;
            if (this.FilePath != target.FilePath) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.RootHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.RootHash, rank + 1);
                }
                if (value.FilePath != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.FilePath);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Empty;
                string p_filePath = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_filePath = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input(p_rootHash, p_filePath);
            }
        }
    }
    public sealed partial class ContentSubscriber_ExportContent_Memory_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>.Empty;

        static ContentSubscriber_ExportContent_Memory_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input(global::Omnius.Core.Cryptography.OmniHash.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public ContentSubscriber_ExportContent_Memory_Input(global::Omnius.Core.Cryptography.OmniHash rootHash)
        {
            this.RootHash = rootHash;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (rootHash != default) ___h.Add(rootHash.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniHash RootHash { get; }

        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.RootHash != target.RootHash) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.RootHash != global::Omnius.Core.Cryptography.OmniHash.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniHash.Formatter.Serialize(ref w, value.RootHash, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniHash p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_rootHash = global::Omnius.Core.Cryptography.OmniHash.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input(p_rootHash);
            }
        }
    }
    public sealed partial class ContentSubscriber_ExportContent_Memory_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>, global::System.IDisposable
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>.Formatter;
        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>.Empty;

        static ContentSubscriber_ExportContent_Memory_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>.Empty = new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output(null);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxMemoryLength = 33554432;

        public ContentSubscriber_ExportContent_Memory_Output(global::System.Buffers.IMemoryOwner<byte>? memory)
        {
            if (memory is not null && memory.Memory.Length > 33554432) throw new global::System.ArgumentOutOfRangeException("memory");

            _memory = memory;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (memory is not null && !memory.Memory.IsEmpty) ___h.Add(global::Omnius.Core.Helpers.ObjectHelper.GetHashCode(memory.Memory.Span));
                return ___h.ToHashCode();
            });
        }

        private readonly global::System.Buffers.IMemoryOwner<byte>? _memory;
        public global::System.ReadOnlyMemory<byte>? Memory => _memory?.Memory;

        public static global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output? left, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if ((this.Memory is null) != (target.Memory is null)) return false;
            if ((this.Memory is not null) && (target.Memory is not null) && !global::Omnius.Core.BytesOperations.Equals(this.Memory.Value.Span, target.Memory.Value.Span)) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        public void Dispose()
        {
            _memory?.Dispose();
        }

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Memory != null)
                {
                    w.Write((uint)1);
                    w.Write(value.Memory.Value.Span);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::System.Buffers.IMemoryOwner<byte>? p_memory = null;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_memory = r.GetRecyclableMemory(33554432);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output(p_memory);
            }
        }
    }
    public sealed partial class DeclaredMessagePublisher_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>.Empty;

        static DeclaredMessagePublisher_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public DeclaredMessagePublisher_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport Report { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessagePublisherReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class DeclaredMessagePublisher_PublishMessage_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>.Empty;

        static DeclaredMessagePublisher_PublishMessage_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>.Empty = new global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input(global::Omnius.Xeus.Engines.Models.DeclaredMessage.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public DeclaredMessagePublisher_PublishMessage_Input(global::Omnius.Xeus.Engines.Models.DeclaredMessage message, string registrant)
        {
            if (message is null) throw new global::System.ArgumentNullException("message");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.Message = message;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (message != default) ___h.Add(message.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.DeclaredMessage Message { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Message != target.Message) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Message != global::Omnius.Xeus.Engines.Models.DeclaredMessage.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.DeclaredMessage.Formatter.Serialize(ref w, value.Message, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.DeclaredMessage p_message = global::Omnius.Xeus.Engines.Models.DeclaredMessage.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_message = global::Omnius.Xeus.Engines.Models.DeclaredMessage.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input(p_message, p_registrant);
            }
        }
    }
    public sealed partial class DeclaredMessagePublisher_UnpublishMessage_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>.Empty;

        static DeclaredMessagePublisher_UnpublishMessage_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>.Empty = new global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input(global::Omnius.Core.Cryptography.OmniSignature.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public DeclaredMessagePublisher_UnpublishMessage_Input(global::Omnius.Core.Cryptography.OmniSignature signature, string registrant)
        {
            if (signature is null) throw new global::System.ArgumentNullException("signature");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.Signature = signature;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (signature != default) ___h.Add(signature.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Signature != target.Signature) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input(p_signature, p_registrant);
            }
        }
    }
    public sealed partial class DeclaredMessageSubscriber_GetReport_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>.Empty;

        static DeclaredMessageSubscriber_GetReport_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public DeclaredMessageSubscriber_GetReport_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport report)
        {
            if (report is null) throw new global::System.ArgumentNullException("report");

            this.Report = report;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (report != default) ___h.Add(report.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport Report { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Report != target.Report) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Report != global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport.Formatter.Serialize(ref w, value.Report, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_report = global::Omnius.Xeus.Engines.Models.DeclaredMessageSubscriberReport.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output(p_report);
            }
        }
    }
    public sealed partial class DeclaredMessageSubscriber_SubscribeMessage_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>.Empty;

        static DeclaredMessageSubscriber_SubscribeMessage_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input(global::Omnius.Core.Cryptography.OmniSignature.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public DeclaredMessageSubscriber_SubscribeMessage_Input(global::Omnius.Core.Cryptography.OmniSignature signature, string registrant)
        {
            if (signature is null) throw new global::System.ArgumentNullException("signature");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.Signature = signature;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (signature != default) ___h.Add(signature.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Signature != target.Signature) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input(p_signature, p_registrant);
            }
        }
    }
    public sealed partial class DeclaredMessageSubscriber_UnsubscribeMessage_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>.Empty;

        static DeclaredMessageSubscriber_UnsubscribeMessage_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input(global::Omnius.Core.Cryptography.OmniSignature.Empty, string.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public static readonly int MaxRegistrantLength = 2147483647;

        public DeclaredMessageSubscriber_UnsubscribeMessage_Input(global::Omnius.Core.Cryptography.OmniSignature signature, string registrant)
        {
            if (signature is null) throw new global::System.ArgumentNullException("signature");
            if (registrant is null) throw new global::System.ArgumentNullException("registrant");
            if (registrant.Length > 2147483647) throw new global::System.ArgumentOutOfRangeException("registrant");

            this.Signature = signature;
            this.Registrant = registrant;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (signature != default) ___h.Add(signature.GetHashCode());
                if (registrant != default) ___h.Add(registrant.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }
        public string Registrant { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Signature != target.Signature) return false;
            if (this.Registrant != target.Registrant) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
                }
                if (value.Registrant != string.Empty)
                {
                    w.Write((uint)2);
                    w.Write(value.Registrant);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;
                string p_registrant = string.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                        case 2:
                            {
                                p_registrant = r.GetString(2147483647);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input(p_signature, p_registrant);
            }
        }
    }
    public sealed partial class DeclaredMessageSubscriber_ExportMessage_Input : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>.Empty;

        static DeclaredMessageSubscriber_ExportMessage_Input()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input(global::Omnius.Core.Cryptography.OmniSignature.Empty);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public DeclaredMessageSubscriber_ExportMessage_Input(global::Omnius.Core.Cryptography.OmniSignature signature)
        {
            if (signature is null) throw new global::System.ArgumentNullException("signature");

            this.Signature = signature;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (signature != default) ___h.Add(signature.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Core.Cryptography.OmniSignature Signature { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if (this.Signature != target.Signature) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.Signature != global::Omnius.Core.Cryptography.OmniSignature.Empty)
                {
                    w.Write((uint)1);
                    global::Omnius.Core.Cryptography.OmniSignature.Formatter.Serialize(ref w, value.Signature, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Core.Cryptography.OmniSignature p_signature = global::Omnius.Core.Cryptography.OmniSignature.Empty;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_signature = global::Omnius.Core.Cryptography.OmniSignature.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input(p_signature);
            }
        }
    }
    public sealed partial class DeclaredMessageSubscriber_ExportMessage_Output : global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>
    {
        public static global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output> Formatter => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>.Formatter;
        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output Empty => global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>.Empty;

        static DeclaredMessageSubscriber_ExportMessage_Output()
        {
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>.Formatter = new ___CustomFormatter();
            global::Omnius.Core.RocketPack.IRocketPackObject<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>.Empty = new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output(null);
        }

        private readonly global::System.Lazy<int> ___hashCode;

        public DeclaredMessageSubscriber_ExportMessage_Output(global::Omnius.Xeus.Engines.Models.DeclaredMessage? declaredMessage)
        {
            this.DeclaredMessage = declaredMessage;

            ___hashCode = new global::System.Lazy<int>(() =>
            {
                var ___h = new global::System.HashCode();
                if (declaredMessage != default) ___h.Add(declaredMessage.GetHashCode());
                return ___h.ToHashCode();
            });
        }

        public global::Omnius.Xeus.Engines.Models.DeclaredMessage? DeclaredMessage { get; }

        public static global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output Import(global::System.Buffers.ReadOnlySequence<byte> sequence, global::Omnius.Core.IBytesPool bytesPool)
        {
            var reader = new global::Omnius.Core.RocketPack.RocketPackObjectReader(sequence, bytesPool);
            return Formatter.Deserialize(ref reader, 0);
        }
        public void Export(global::System.Buffers.IBufferWriter<byte> bufferWriter, global::Omnius.Core.IBytesPool bytesPool)
        {
            var writer = new global::Omnius.Core.RocketPack.RocketPackObjectWriter(bufferWriter, bytesPool);
            Formatter.Serialize(ref writer, this, 0);
        }

        public static bool operator ==(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output? right)
        {
            return (right is null) ? (left is null) : right.Equals(left);
        }
        public static bool operator !=(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output? left, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output? right)
        {
            return !(left == right);
        }
        public override bool Equals(object? other)
        {
            if (other is not global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output) return false;
            return this.Equals((global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output)other);
        }
        public bool Equals(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output? target)
        {
            if (target is null) return false;
            if (object.ReferenceEquals(this, target)) return true;
            if ((this.DeclaredMessage is null) != (target.DeclaredMessage is null)) return false;
            if ((this.DeclaredMessage is not null) && (target.DeclaredMessage is not null) && this.DeclaredMessage != target.DeclaredMessage) return false;

            return true;
        }
        public override int GetHashCode() => ___hashCode.Value;

        private sealed class ___CustomFormatter : global::Omnius.Core.RocketPack.IRocketPackObjectFormatter<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>
        {
            public void Serialize(ref global::Omnius.Core.RocketPack.RocketPackObjectWriter w, in global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output value, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                if (value.DeclaredMessage != null)
                {
                    w.Write((uint)1);
                    global::Omnius.Xeus.Engines.Models.DeclaredMessage.Formatter.Serialize(ref w, value.DeclaredMessage, rank + 1);
                }
                w.Write((uint)0);
            }
            public global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output Deserialize(ref global::Omnius.Core.RocketPack.RocketPackObjectReader r, in int rank)
            {
                if (rank > 256) throw new global::System.FormatException();

                global::Omnius.Xeus.Engines.Models.DeclaredMessage? p_declaredMessage = null;

                for (; ; )
                {
                    uint id = r.GetUInt32();
                    if (id == 0) break;
                    switch (id)
                    {
                        case 1:
                            {
                                p_declaredMessage = global::Omnius.Xeus.Engines.Models.DeclaredMessage.Formatter.Deserialize(ref r, rank + 1);
                                break;
                            }
                    }
                }

                return new global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output(p_declaredMessage);
            }
        }
    }
    public interface IXeusService
    {
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output> CkadMediator_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output> CkadMediator_GetMyNodeProfileAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask CkadMediator_AddCloudNodeProfilesAsync(global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output> ContentExchanger_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output> DeclaredMessageExchanger_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output> ContentPublisher_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output> ContentPublisher_PublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output> ContentPublisher_PublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask ContentPublisher_UnpublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask ContentPublisher_UnpublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output> ContentSubscriber_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask ContentSubscriber_SubscribeContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask ContentSubscriber_UnsubscribeContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask ContentSubscriber_ExportContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output> ContentSubscriber_ExportContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output> DeclaredMessagePublisher_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask DeclaredMessagePublisher_PublishMessageAsync(global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask DeclaredMessagePublisher_UnpublishMessageAsync(global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output> DeclaredMessageSubscriber_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask DeclaredMessageSubscriber_SubscribeMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask DeclaredMessageSubscriber_UnsubscribeMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default);
        global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output> DeclaredMessageSubscriber_ExportMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default);
    }
    public class XeusService
    {
        public class Client : global::Omnius.Core.AsyncDisposableBase, global::Omnius.Xeus.Api.IXeusService
        {
            private readonly global::Omnius.Core.Net.Connections.IConnection _connection;
            private readonly global::Omnius.Core.IBytesPool _bytesPool;
            private readonly global::Omnius.Core.Remoting.IRemoting _remoting;
            public Client(global::Omnius.Core.Net.Connections.IConnection connection, global::Omnius.Core.IBytesPool bytesPool)
            {
                _connection = connection;
                _bytesPool = bytesPool;
                _remoting = global::Omnius.Core.Remoting.Remoting.Factory.Create(_connection, global::Omnius.Core.Remoting.RemotingMessenger.Factory, global::Omnius.Core.Remoting.RemotingFunction.Factory, _bytesPool);
            }
            protected override async global::System.Threading.Tasks.ValueTask OnDisposeAsync()
            {
                await _remoting.DisposeAsync();
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output> CkadMediator_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(1, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output> CkadMediator_GetMyNodeProfileAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(2, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask CkadMediator_AddCloudNodeProfilesAsync(global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(3, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output> ContentExchanger_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(4, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output> DeclaredMessageExchanger_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(5, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output> ContentPublisher_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(6, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output> ContentPublisher_PublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(7, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output> ContentPublisher_PublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(8, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask ContentPublisher_UnpublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(9, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask ContentPublisher_UnpublishContentAsync(global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(10, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output> ContentSubscriber_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(11, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask ContentSubscriber_SubscribeContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(12, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask ContentSubscriber_UnsubscribeContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(13, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask ContentSubscriber_ExportContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(14, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output> ContentSubscriber_ExportContentAsync(global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(15, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output> DeclaredMessagePublisher_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(16, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask DeclaredMessagePublisher_PublishMessageAsync(global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(17, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask DeclaredMessagePublisher_UnpublishMessageAsync(global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(18, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output> DeclaredMessageSubscriber_GetReportAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(19, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>(cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask DeclaredMessageSubscriber_SubscribeMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(20, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask DeclaredMessageSubscriber_UnsubscribeMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(21, cancellationToken);
                await function.CallActionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>(param, cancellationToken);
            }
            public async global::System.Threading.Tasks.ValueTask<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output> DeclaredMessageSubscriber_ExportMessageAsync(global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input param, global::System.Threading.CancellationToken cancellationToken = default)
            {
                using var function = await _remoting.ConnectAsync(22, cancellationToken);
                return await function.CallFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>(param, cancellationToken);
            }
        }
        public class Server : global::Omnius.Core.AsyncDisposableBase
        {
            private readonly global::Omnius.Xeus.Api.IXeusService _service;
            private readonly global::Omnius.Core.Net.Connections.IConnection _connection;
            private readonly global::Omnius.Core.IBytesPool _bytesPool;
            private readonly global::Omnius.Core.Remoting.IRemoting _remoting;
            public Server(global::Omnius.Xeus.Api.IXeusService service, global::Omnius.Core.Net.Connections.IConnection connection, global::Omnius.Core.IBytesPool bytesPool)
            {
                _service = service;
                _connection = connection;
                _bytesPool = bytesPool;
                _remoting = global::Omnius.Core.Remoting.Remoting.Factory.Create(_connection, global::Omnius.Core.Remoting.RemotingMessenger.Factory, global::Omnius.Core.Remoting.RemotingFunction.Factory, _bytesPool);
            }
            protected override async global::System.Threading.Tasks.ValueTask OnDisposeAsync()
            {
                await _remoting.DisposeAsync();
            }
            public async global::System.Threading.Tasks.Task EventLoopAsync(global::System.Threading.CancellationToken cancellationToken = default)
            {
                while (!cancellationToken.IsCancellationRequested)
                {
                    cancellationToken.ThrowIfCancellationRequested();
                    using var function = await _remoting.AcceptAsync(cancellationToken);
                    switch (function.Id)
                    {
                        case 1:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.CkadMediator_GetReport_Output>(_service.CkadMediator_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 2:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.CkadMediator_GetMyNodeProfile_Output>(_service.CkadMediator_GetMyNodeProfileAsync, cancellationToken);
                            }
                            break;
                        case 3:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.CkadMediator_AddCloudNodeProfiles_Input>(_service.CkadMediator_AddCloudNodeProfilesAsync, cancellationToken);
                            }
                            break;
                        case 4:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentExchanger_GetReport_Output>(_service.ContentExchanger_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 5:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageExchanger_GetReport_Output>(_service.DeclaredMessageExchanger_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 6:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_GetReport_Output>(_service.ContentPublisher_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 7:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Input, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_File_Output>(_service.ContentPublisher_PublishContentAsync, cancellationToken);
                            }
                            break;
                        case 8:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Input, global::Omnius.Xeus.Api.ContentPublisher_PublishContent_Memory_Output>(_service.ContentPublisher_PublishContentAsync, cancellationToken);
                            }
                            break;
                        case 9:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_File_Input>(_service.ContentPublisher_UnpublishContentAsync, cancellationToken);
                            }
                            break;
                        case 10:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.ContentPublisher_UnpublishContent_Memory_Input>(_service.ContentPublisher_UnpublishContentAsync, cancellationToken);
                            }
                            break;
                        case 11:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentSubscriber_GetReport_Output>(_service.ContentSubscriber_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 12:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_SubscribeContent_Input>(_service.ContentSubscriber_SubscribeContentAsync, cancellationToken);
                            }
                            break;
                        case 13:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_UnsubscribeContent_Input>(_service.ContentSubscriber_UnsubscribeContentAsync, cancellationToken);
                            }
                            break;
                        case 14:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_File_Input>(_service.ContentSubscriber_ExportContentAsync, cancellationToken);
                            }
                            break;
                        case 15:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Input, global::Omnius.Xeus.Api.ContentSubscriber_ExportContent_Memory_Output>(_service.ContentSubscriber_ExportContentAsync, cancellationToken);
                            }
                            break;
                        case 16:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_GetReport_Output>(_service.DeclaredMessagePublisher_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 17:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_PublishMessage_Input>(_service.DeclaredMessagePublisher_PublishMessageAsync, cancellationToken);
                            }
                            break;
                        case 18:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.DeclaredMessagePublisher_UnpublishMessage_Input>(_service.DeclaredMessagePublisher_UnpublishMessageAsync, cancellationToken);
                            }
                            break;
                        case 19:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_GetReport_Output>(_service.DeclaredMessageSubscriber_GetReportAsync, cancellationToken);
                            }
                            break;
                        case 20:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_SubscribeMessage_Input>(_service.DeclaredMessageSubscriber_SubscribeMessageAsync, cancellationToken);
                            }
                            break;
                        case 21:
                            {
                                await function.ListenActionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_UnsubscribeMessage_Input>(_service.DeclaredMessageSubscriber_UnsubscribeMessageAsync, cancellationToken);
                            }
                            break;
                        case 22:
                            {
                                await function.ListenFunctionAsync<global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Input, global::Omnius.Xeus.Api.DeclaredMessageSubscriber_ExportMessage_Output>(_service.DeclaredMessageSubscriber_ExportMessageAsync, cancellationToken);
                            }
                            break;
                    }
                }
            }
        }
    }
}
