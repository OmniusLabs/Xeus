syntax = v1.0;

using "Omnix.Algorithms.Cryptography";
using "Omnix.Network";
using "Xeus.Messages";

namespace "Xeus.Core.Internal.Storage";
option csharp_access_level = "internal";

enum CorrectionAlgorithmType : uint8 {
    ReedSolomon8 = 0,
}

table MerkleTreeSection {
    CorrectionAlgorithmType: CorrectionAlgorithmType = 0,
    Length: uint64 = 1,
    Hashes: vector<OmniHash>(capacity: 1048576) = 2,
}

table MerkleTreeNode {
    Sections: vector<MerkleTreeSection>(capacity: 1048576) = 0,
}

table ClusterMetadata {
    Sectors: vector<uint64>(capacity: 256) = 0,
    Length: uint32 = 1,
    LastAccessTime: timestamp = 2,
}

table SharedBlocksMetadata {
    Path: string(capacity: 1024) = 0,
    Length: uint64 = 1,
    BlockLength: uint32 = 2,
    Hashes: vector<OmniHash>(capacity: 1073741824) = 3,
}

table ContentMetadata {
    Clue: XeusClue = 0,
    LockedHashes: vector<OmniHash>(capacity: 1073741824) = 1,
    SharedBlocksMetadata: SharedBlocksMetadata? = 2, 
}

table BlockStorageConfig {
    Version: uint32 = 0,
    Size: uint64 = 1,
    ClusterMetadataMap: map<OmniHash, ClusterMetadata>(capacity: 1073741824) = 2,
}

table ContentStorageConfig {
    Version: uint32 = 0,
    ContentMetadatas: vector<ContentMetadata>(capacity: 1073741824) = 1,
}
